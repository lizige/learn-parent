<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:test="http://www.wht.org/schema/test"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-4.1.xsd
           http://www.wht.org/schema/test
           http://www.wht.org/schema/wht-test.xsd">
<!--
    <test:lizi>
       <test:name>李子</test:name>
       <test:age>12</test:age>
    </test:lizi>
  -->    

    <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <beans:property name="basename" value="conf/messages/message"></beans:property>
    </beans:bean>
    
    <http pattern="/login.jsp" security="none" />
    <http pattern="/resource/**" security="none"></http>
    
    
  
    <http   authentication-manager-ref="authenticationManager" >
        <intercept-url pattern="/admin.jsp" />
        <intercept-url pattern="/**" />
        
        <!-- 配置登录信息 -->
        <form-login login-page="/login.jsp"  
                    login-processing-url="/login"
                    password-parameter="loginPassword"
                    username-parameter="loginName"
                    default-target-url="/index"
                    authentication-failure-url="/login.jsp?failed=true" />
                    
        <custom-filter ref="myFilterSecurityInterceptor" 
                       before="FILTER_SECURITY_INTERCEPTOR"
                       />
                       
        <csrf disabled="true"/>
        
        <headers>
           <frame-options policy="SAMEORIGIN"/>
        </headers>
                       
        <anonymous enabled="false"/>
        
        <session-management >
           <concurrency-control max-sessions="1" expired-url="/login.jsp" />
        </session-management>
   
                    
        <logout invalidate-session="true" logout-url="/logout"
                logout-success-url="/login.jsp"
                delete-cookies="wori,name" />
    
    </http>
    
 
    
    <authentication-manager id="authenticationManager" >
       <authentication-provider ref="daoAuthenticationProvider"></authentication-provider>
    </authentication-manager>
    
    <beans:bean id="userServiceImpl" class="com.wht.system.service.UserServiceImpl" ></beans:bean>
    
    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    
      <!-- 用户密码加密和解码的 -->
      <!--  <beans:property name="passwordEncoder" ref="md5PasswordEncoder"></beans:property>  --> 
        <beans:property name="userDetailsService"  ref="userServiceImpl"> </beans:property>
    </beans:bean>
    
    <beans:bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
    

     
    <beans:bean id="myFilterInvocationSecurityMetadataSource" class="com.wht.system.security.MyFilterInvocationSecurityMetadataSource">
         <beans:constructor-arg ref="securityManager">
         </beans:constructor-arg>
    </beans:bean>
      
    <beans:bean id="myFilterSecurityInterceptor" class="com.wht.system.security.MyFilterSecurityInterceptor">
         <beans:property name="securityMetadataSource" ref="myFilterInvocationSecurityMetadataSource"></beans:property>
         <beans:property name="accessDecisionManager" ref="unanimousBased"></beans:property>
         <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
    </beans:bean>
    
    <!-- 存在授权就通过 -->
    <beans:bean id="unanimousBased" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:constructor-arg>
           <beans:list>
              <beans:ref bean="functionVoter" />
           </beans:list>
        </beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="functionVoter" class="com.wht.system.security.FunctionVoter"></beans:bean>
</beans:beans> 